source,Question,Answer
course slides,End Users,"Casual, Na_ve, Sophisticated and Stand-alone"
course slides,Data modelling,A design process converts requirements into data model with two kinds logical and physical.
course slides,Quality of Designs,"Correctness, completeness and consistency."
course slides,Entity-Relationship (ER) Model,"Consist of attribute, entity and relationship."
course slides,ER diagram,"An ER diagram consists of a collection of entity set, relationship set, attributes and connection s between entity and relationship sets."
course slides,Superkey,Any set of attributes whose set of values are distinct over entity set and natural or atificial.
course slides,Candidate key,Any superkey such that no proper subset of its attirbutes is also a superkey.
course slides,Primary key,It is one candidate key chosen by the database designer.
course slides,Relationship,An association among several entities
course slides,Relationship set,Collection of relationships of the same type
course slides,Degree,Number of entites invove in relationship.
course slides,Cardinality,Number of associated entities on each side of relationship
course slides,Weak entities,exist only because of association with strong entities have no key of their own; have a discriminator
course slides,Relational database schema,It is a set of relation schemas and a set of integrity constraints.
course slides,Relational database instance,a set of relation instances where all of the integrity constraints are satisfied
course slides,Mapping Composite Attributes,Composite attributes are mapped by concatenation or flattening.
course slides,Mapping Multi-valued Attributes (MVAs),MVAs are mapped by a new table linking values to their entity.
course slides,relational database management system (RDBMS),"RDBMS is software designed to support large-scale data-intensive applications allowing high-level description of data (tables, constraints) with high-level access to the data (relational model, SQL) providing efficient storage and retrieval (disk/memory management) supporting multiple simultaneous users (privilege, protection) doing multiple simultaneous operations (transactions, concurrency) )
m"
course slides,Aggregates,Aggregates reduce a collection of values into a single result.
course slides,Triggers,Triggers are procedures stored in the database activated in response to database events (e.g. updates)
course slides,Catalogs,"An RDBMS maintains a collection of relation instances. To do this, it also needs information about relations: name, owner, primary key of each relation
name, data type, constraints for each attribute
authorisation for operations on each relation
Similarly for other DBMS objects (e.g. views, functions, triggers, ...)
This information is stored in the system catalog."
course slides,Relational Design and Redundancy,"A good relational database design:
must capture all necessary attributes/associations
do this with a minimal amount of stored information
Minimal stored information _ no redundant data.
In database design, redundancy is generally a ""bad thing"":
causes problems maintaining consistency after updates
But ... redundancy may give performance improvements
e.g. avoid a join to collect bits of data together"
course slides,Boyce-Codd Normal Form,"A relation schema R is in BCNF w.r.t a set F of functional dependencies iff:
for all fds X ¡ú Y in F+
either X ¡ú Y is trivial (i.e. Y _ X)
or X is a superkey
A DB schema is in BCNF if all relation schemas are in BCNF."
course slides,Normal Forms,"Normalization theory defines six normal forms (NFs).
First,Second,Third Normal Forms (1NF,2NF,3NF) (Codd 1972)
Boyce-Codd Normal Form (BCNF) (1974)
Fourth Normal Form (4NF) (Zaniolo 1976, Fagin 1977)
Fifth Normal Form (5NF) (Fagin 1979)
NF hierarachy: 5NF _ 4NF _ BCNF _ 3NF _ 2NF _ 1NF
1NF allows most redundancy; 5NF allows least redundancy."
course slides,1NF,"all attributes have atomic values
we assume this as part of relation al model,
so every relation schema is in 1NF"
course slides,2NF,"all non-key attributes fully depend on key
(i.e. no partial dependencies)
avoids much redundancy"
course slides,3NF,no attributes dependent on non-key attrs
course slides,BCNF,"(i.e. no transitive dependencies)
avoids most remaining redundan cy"
course slides,Relation Decomposition,"The standard transformation technique to remove redundancy:
decompose relation R into relations S and T
We accomplish decomposition by
selecting (overlapping) subsets of attributes
forming new relations based on attribute subsets"
course slides,Third Normal Form,"A relation schema R is in 3NF w.r.t. a set F of functional dependencies iff:
for all fds X ¡ú Y in F+
either X ¡ú Y is trivial (i.e. Y _ X)
or X is a superkey
or Y is a single attribute from a key
A DB schema is in 3NF if all relation schemas are in 3NF."
course slides,Database Design Methodology,"To achieve a ""good"" database design:
identify attributes, entities, relationships ¡ú ER design
map ER design to relational schema
identify constraints (including keys and functional dependencies)
apply BCNF/3NF algorithms to produce normalized schema"
course slides,File manager,manages allocation of disk space and data structures
course slides,Buffer manager,manages data transfer between disk and main memory
course slides,Query optimiser,translates queries into efficient sequence of relational operations
course slides,Recovery manager,ensures consistent database state after system failures
course slides,Concurrency manager,controls concurrent access to database
course slides,Integrity manager,verifies integrity constraints and user privileges
course slides,Relational Algebra,"mathematical system for manipulating relations, or data manipulation language (DML) for the relational model"
course slides,Rename,Rename provides ¡éschema mapping
course slides,Selection,Selection returns a subset of the tuples in a relation r(R) that satisfy a specified condition C.
course slides,Projection,Projection returns a set of tuples containing a subset of the attributes in the original relation.
course slides,Union,Union combines two compatible relations into a single relation via set union of sets of tuples.
course slides,Intersection,Intersection combines two compatible relations into a single relation via set intersection of sets of tuples.
course slides,Product,Product (Cartesian product) combines information from two relations pairwise on tuples.
course slides,Natural Join,Natural join is a specialised product: containing only pairs that match on common attributes with one of each pair of common attributes eliminated
course slides,Theta Join,The theta join is a specialised product containing only pairs that match on a supplied condition C.
course slides,Query Optimisation,"The query optimiser start with an RA expression, then generates a set of equivalent expressions generates possible execution plans for each,estimates cost of each plan, chooses chepaest"
course slides,Transaction,"A transaction is an atomic ""unit of work"" in an application which may require multiple database changes"